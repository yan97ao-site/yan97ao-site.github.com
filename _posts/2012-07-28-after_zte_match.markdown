---
comments: true
date: 2012-07-28 20:54:13
layout: post
slug: after_zte_match
title: 写在“中兴捧月”折腾完之后
wordpress_id: 234
categories:
- 日记
tags:
- QT
- 中兴捧月
- 设计哲学
- 贝叶斯
---

昨天晚上终于痛苦的结束了这次的“中兴捧月”，昨晚的实验室应该是像极了公司产品交付或者上线前的夜晚，所有人都在忙碌着，忙着解决最后一个bug，忙着完善设计文档或者设计手册。

在我们意识到时间紧迫不能不马上开始玩命的时候，距离比赛结束已经只有一周了。然后就是地狱般的一周，白天我们要参加某公司的需求分析讨论会，每天开会时间7个小时左右，剩下的所有时间都用在了这个比赛上面。我真的是利用开会的间歇20分钟还要跑上来写两三行程序，重构三两段代码。因为一开始设计考虑的有问题，前几天的代码写的非常臃肿，最后两天我的代码量一直是越写越少。这种抽丝剥茧的感觉非常好，同时也应该算是符合快速原型开发然后再重构的设计流程吧，那谁说过，过早优化是万恶之源。

在初赛的时候我看了全部的源代码，因为自己这几年从事方向的原因，我对于界面层考虑的不是很多。对MVC的认识也始终停留在概念上，究竟该怎么把视图 控制 数据模型设计好，究竟该怎么分离事务和处理的流程我一直没有非常清晰的认识。本科材料学的课上老师说过，上帝创造物质，魔鬼创造界面。当时提到的界面当然指的是不同物质之间的分界面。但是相同的话在软件领域也非常有道理，如果能够设计好软件的层级关系和接口，那项目基本上也就没有太多障碍了，技术上实现的一切问题总是会有解决办法，难的是一个层次清晰 职责明确，兼具可扩展性和可维护性的设计……

话说这次的某公司项目，要实现一系列非常复杂的事务处理流程，要在一个S3C2410的嵌入式系统上实现功能的编辑 查询 事物处理 历史记录的一系列功能，而且还有若干套当时设计不完善经过多次修修补补的通讯协议……有时候想一下这个软件的结构当场大脑里的栈就溢出了……

这次通过“中兴捧月”的机会也稍微接触了一点点QT，界面部分有专人负责，所有没有分精力去看QT的信号槽和触发机制什么的。但是之前记得师兄讲过这部分内容，QT是要对源代码先进行一部预处理插入相应的代码来实现界面和功能的绑定的，我在这方面造诣有限是在是没有办法评价，但是我总觉得这样的方法太“dirty hack”了。我实际的代码中主要是用到了QT的若干数据结构，QT的文档看起来还算是比较友好，问题不是很大。但是对于C++这样的层层封装机制……我经常遇到需要在不同对象之间进行转换的问题，还可能有父类子类虚函数覆盖的一些问题。这些都让人十分头大。在写程序过程中越来越想念C里面那么直接的方式：指针在手，天下我有。遇到稍微复杂一点的查找和字符串操作的时候，我又开始怀念python里面的一些优秀设计……我从来不敢说自己会用C++，C++在很多地方的设计已经可以说是反人类反社会了（而且在C++11里还增加了更多的新特性！）。这门语言已经太过于臃肿复杂，以至于我这种智商状况无法掌握了吧。

说来还有一点不能不吐糟的是，也许我从接触程序到现在做的最成功的决定之一便是转向Linux平台没有紧跟M$的脚步吧。看到有些人跟着微软一路MFC COM+ .net C# sliverlight一路走在被虐的遍体鳞伤，是在是非常庆幸自己的决定。QT虽然结构复杂，但是比我记忆中的MFC里面需要大量使用C++的技巧要好的多吧。

另外，在决赛中我负责实现基于用户行为的短信内容过滤。自从Paul Graham在2002年提出贝叶斯方法以来，基于统计学的内容过滤在这方面已经做的十分完善了。我测试的时候选了IT新闻作为正常内容，娱乐新闻作为要过滤掉的内容。各输入80组数据之后就已经可以取得非常好的过滤效果了。感谢《黑客与画家》，虽然我当时买这本书的时候并没有期望能从这里面得到如此实效的帮助。实际上我感觉一个正常、理智的大脑在日常生活中判断事情的方法大概应该也是类似贝叶斯的方法。这个过程实际上就是根据过去学习的经验（后验概率）去判断在特定条件下某个事情发生的大致概率（先验概率）。想清楚这里，就豁然开朗了。
